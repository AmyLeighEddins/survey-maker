generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model flyway_schema_history {
  installed_rank Int      @id(map: "flyway_schema_history_pk")
  version        String?  @db.VarChar(50)
  description    String   @db.VarChar(200)
  type           String   @db.VarChar(20)
  script         String   @db.VarChar(1000)
  checksum       Int?
  installed_by   String   @db.VarChar(100)
  installed_on   DateTime @default(now()) @db.Timestamp(6)
  execution_time Int
  success        Boolean

  @@index([success], map: "flyway_schema_history_s_idx")
}

model users {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  email      String   @unique @db.VarChar(255)
  password   String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model surveytypes {
  id          Int       @id @default(autoincrement())
  description String    @db.VarChar(255)
  surveys     surveys[]
}

model surveys {
  id              Int               @id @default(autoincrement())
  summary         String            @db.VarChar(255)
  created_date    DateTime          @default(now()) @db.Timestamp(6)
  expiry_date     DateTime          @default(now()) @db.Timestamp(6)
  survey_type_id  Int
  surveymetadata  surveymetadata[]
  surveyquestions surveyquestions[]
  surveytypes     surveytypes       @relation(fields: [survey_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model surveystatuses {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
}

model surveytags {
  id          Int    @id @default(autoincrement())
  description String @db.VarChar(255)
}

model surveymetadata {
  id                         Int                 @id @default(autoincrement())
  value                      String              @db.VarChar(255)
  user_form_metadata_type_id Int
  survey_id                  Int
  surveys                    surveys             @relation(fields: [survey_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  surveymetadatatypes        surveymetadatatypes @relation(fields: [user_form_metadata_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model surveymetadatatypes {
  id             Int              @id @default(autoincrement())
  description    String           @db.VarChar(255)
  surveymetadata surveymetadata[]
}

model surveyquestiontypes {
  id              Int               @id @default(autoincrement())
  description     String            @db.VarChar(255)
  surveyquestions surveyquestions[]
}

model surveyquestions {
  id                      Int                 @id @default(autoincrement())
  title                   String              @db.VarChar(255)
  description             String              @db.VarChar(255)
  tooltip                 String              @db.VarChar(255)
  sequence                Int
  survey_id               Int
  survey_question_type_id Int
  surveys                 surveys             @relation(fields: [survey_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  surveyquestiontypes     surveyquestiontypes @relation(fields: [survey_question_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
